##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration


server{
listen 80;
server_name e-buuk.com;
return 301 https://$host$request_uri;
}

server{
 include mime.types;	
default_type application/octet-stream;	
listen 443 ssl http2 ;
server_name som-soft.com www.som-soft.com;

   ssl_certificate /etc/nginx/ssl2/som-soft_com.crt;
    ssl_certificate_key /etc/nginx/ssl2/som-soft.com.key;
    

    # Optional: Include the intermediate certificate file
    # ssl_trusted_certificate /etc/nginx/ssl/intermediate.pem;

    # Other SSL settings (optional)
     ssl_protocols TLSv1.2 TLSv1.3;
     ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384';
     ssl_prefer_server_ciphers on;

location ~* ^/(admin|dbadmin|mysql|phpMyAdmin2|phpma|sqlweb|webdb|websql|_phpMyAdmin)/scripts/setup.php {
    deny all;
}

location / {
                # First attempt to serve request as file, then
                # as directory, then fall back to displaying a 404.
                 root /opt/somsoft/frontend/;
              try_files $uri /index.html;
        }

}

server {

	include mime.types;
	default_type application/octet-stream;
	proxy_headers_hash_max_size 1024;
	proxy_headers_hash_bucket_size 128;
	charset utf-8;

	gzip on;
	gzip_types text/plain text/html text/css application/json;
#	listen 80 default_server;
#	listen [::]:80 default_server;
    listen 443 ssl http2 ;
	# SSL configuration
	#
	# listen 443 ssl default_server;
	# listen [::]:443 ssl default_server;
	#
	# Note: You should disable gzip for SSL traffic.
	# See: https://bugs.debian.org/773332
	#
	# Read up on ssl_ciphers to ensure a secure configuration.
	# See: https://bugs.debian.org/765782
	#
	# Self signed certs generated by the ssl-cert package
	# Don't use them in a production server!
	#
	# include snippets/snakeoil.conf;

#	root /var/www/html;

	# Add index.php to the list if you are using PHP
	#index index.html index.htm index.nginx-debian.html;

	server_name e-buuk.com www.e-buuk.com;



	 ssl_certificate /etc/nginx/ssl/e-buuk_com.crt;
    ssl_certificate_key /etc/nginx/ssl/ebuuk.com.key;
    ssl_trusted_certificate /etc/nginx/ssl/e-buuk_com.ca-bundle;

    # Optional: Include the intermediate certificate file
    # ssl_trusted_certificate /etc/nginx/ssl/intermediate.pem;

    # Other SSL settings (optional)
     ssl_protocols TLSv1.2 TLSv1.3;
     ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384';
     ssl_prefer_server_ciphers on;

proxy_pass_request_headers on;

	location / {
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		 root /opt/frontend/;
		try_files $uri /index.html;
		include mime.types;
	}

	location /api {

         proxy_pass http://localhost:8080;
	 proxy_set_header Upgrade $http_upgrade;
	 proxy_set_header Connection 'upgrade';
	 proxy_set_header Host $host;
	 proxy_cache_bypass $http_upgrade;

	}

     location /uploads/ {

       alias /opt/Nodejs/uploads/;
       expires max;
       add_header Cache-Control "public, max-age=31536000";

      
     }

	# pass PHP scripts to FastCGI server
	#
	#location ~ \.php$ {
	#	include snippets/fastcgi-php.conf;
	#
	#	# With php-fpm (or other unix sockets):
	#	fastcgi_pass unix:/run/php/php7.4-fpm.sock;
	#	# With php-cgi (or other tcp sockets):
	#	fastcgi_pass 127.0.0.1:9000;
	#}

	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	#
	#location ~ /\.ht {
	#	deny all;
	#}
}


# Virtual Host configuration for example.com
#
# You can move that to a different file under sites-available/ and symlink that
# to sites-enabled/ to enable it.
#
#server {
#	listen 80;
#	listen [::]:80;
#
#	server_name example.com;
#
#	root /var/www/example.com;
#	index index.html;
#
#	location / {
#		try_files $uri $uri/ =404;
#	}
#}
